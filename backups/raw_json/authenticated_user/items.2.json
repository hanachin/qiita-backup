[{"rendered_body":"\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e@require: stdja\n@require: list\n\nmodule Kansuji : sig\n  direct \\kansujichar0 : [inline-text] inline-cmd\n  direct \\kansujichar1 : [inline-text] inline-cmd\n  direct \\kansujichar2 : [inline-text] inline-cmd\n  direct \\kansujichar3 : [inline-text] inline-cmd\n  direct \\kansujichar4 : [inline-text] inline-cmd\n  direct \\kansujichar5 : [inline-text] inline-cmd\n  direct \\kansujichar6 : [inline-text] inline-cmd\n  direct \\kansujichar7 : [inline-text] inline-cmd\n  direct \\kansujichar8 : [inline-text] inline-cmd\n  direct \\kansujichar9 : [inline-text] inline-cmd\n  direct \\kansuji : [int] inline-cmd\nend = struct\n  let-mutable kansujichar0 \u0026lt;- {〇}\n  let-mutable kansujichar1 \u0026lt;- {一}\n  let-mutable kansujichar2 \u0026lt;- {二}\n  let-mutable kansujichar3 \u0026lt;- {三}\n  let-mutable kansujichar4 \u0026lt;- {四}\n  let-mutable kansujichar5 \u0026lt;- {五}\n  let-mutable kansujichar6 \u0026lt;- {六}\n  let-mutable kansujichar7 \u0026lt;- {七}\n  let-mutable kansujichar8 \u0026lt;- {八}\n  let-mutable kansujichar9 \u0026lt;- {九}\n\n  let-inline ctx \\kansujichar0 inner = let () = kansujichar0 \u0026lt;- inner in inline-nil\n  let-inline ctx \\kansujichar1 inner = let () = kansujichar1 \u0026lt;- inner in inline-nil\n  let-inline ctx \\kansujichar2 inner = let () = kansujichar2 \u0026lt;- inner in inline-nil\n  let-inline ctx \\kansujichar3 inner = let () = kansujichar3 \u0026lt;- inner in inline-nil\n  let-inline ctx \\kansujichar4 inner = let () = kansujichar4 \u0026lt;- inner in inline-nil\n  let-inline ctx \\kansujichar5 inner = let () = kansujichar5 \u0026lt;- inner in inline-nil\n  let-inline ctx \\kansujichar6 inner = let () = kansujichar6 \u0026lt;- inner in inline-nil\n  let-inline ctx \\kansujichar7 inner = let () = kansujichar7 \u0026lt;- inner in inline-nil\n  let-inline ctx \\kansujichar8 inner = let () = kansujichar8 \u0026lt;- inner in inline-nil\n  let-inline ctx \\kansujichar9 inner = let () = kansujichar9 \u0026lt;- inner in inline-nil\n\n  let range s e =\n    let-rec r n = if n \u0026gt; e then [] else n :: (r (n + 1)) in\n    if e == s then\n      [s]\n    else if e \u0026lt; s then\n      []\n    else\n      r s\n\n  let split-into-chars s =\n    let len = string-length s in\n    (range 0 (len - 1)) |\u0026gt; List.map (fun i -\u0026gt; string-sub s i 1)\n\n  let to-inline-text c =\n    match c with\n    | `0` -\u0026gt; !kansujichar0\n    | `1` -\u0026gt; !kansujichar1\n    | `2` -\u0026gt; !kansujichar2\n    | `3` -\u0026gt; !kansujichar3\n    | `4` -\u0026gt; !kansujichar4\n    | `5` -\u0026gt; !kansujichar5\n    | `6` -\u0026gt; !kansujichar6\n    | `7` -\u0026gt; !kansujichar7\n    | `8` -\u0026gt; !kansujichar8\n    | `9` -\u0026gt; !kansujichar9\n    |  _  -\u0026gt; {謎}\n\n  let-inline ctx \\kansuji x =\n    (split-into-chars (arabic x)) |\u0026gt; List.fold-left (fun acc c -\u0026gt;\n      acc ++ (read-inline ctx (to-inline-text c))\n    ) inline-nil\nend\n\nlet-inline ctx \\kansujiconfig inner = let _ = read-inline ctx inner in inline-nil\n\nin\n\ndocument (|\n  author = { Seiei MIYAGI };\n  show-title = true;\n  show-toc = false;\n  title = { SATySFiで漢数字 }\n|) '\u0026lt;\n +p {\n   \\kansuji(1234567890);\n   \\kansujiconfig {\n     \\kansujichar0{ぜろ}\n     \\kansujichar1{いち}\n     \\kansujichar2{に}\n     \\kansujichar3{さん}\n     \\kansujichar4{し}\n     \\kansujichar5{ご}\n     \\kansujichar6{ろく}\n     \\kansujichar7{しち}\n     \\kansujichar8{はち}\n     \\kansujichar9{く}\n   }\n   \\kansuji(1234567890);\n }\n\u0026gt;\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"実行結果\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A1%8C%E7%B5%90%E6%9E%9C\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実行結果\u003c/h2\u003e\n\n\u003cp\u003e\u003ca href=\"https://camo.qiitausercontent.com/e820715da4a43712b0b51318e7de02a82ccd6f33/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f323037342f64313061663030622d643362642d386661382d353536372d3339353165346363633530622e706e67\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://camo.qiitausercontent.com/e820715da4a43712b0b51318e7de02a82ccd6f33/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f323037342f64313061663030622d643362642d386661382d353536372d3339353165346363633530622e706e67\" alt=\"Screenshot from 2018-10-22 11-00-07.png\" data-canonical-src=\"https://qiita-image-store.s3.amazonaws.com/0/2074/d10af00b-d3bd-8fa8-5567-3951e4ccc50b.png\"\u003e\u003c/a\u003e\u003c/p\u003e\n","body":"```\n@require: stdja\n@require: list\n\nmodule Kansuji : sig\n  direct \\kansujichar0 : [inline-text] inline-cmd\n  direct \\kansujichar1 : [inline-text] inline-cmd\n  direct \\kansujichar2 : [inline-text] inline-cmd\n  direct \\kansujichar3 : [inline-text] inline-cmd\n  direct \\kansujichar4 : [inline-text] inline-cmd\n  direct \\kansujichar5 : [inline-text] inline-cmd\n  direct \\kansujichar6 : [inline-text] inline-cmd\n  direct \\kansujichar7 : [inline-text] inline-cmd\n  direct \\kansujichar8 : [inline-text] inline-cmd\n  direct \\kansujichar9 : [inline-text] inline-cmd\n  direct \\kansuji : [int] inline-cmd\nend = struct\n  let-mutable kansujichar0 \u003c- {〇}\n  let-mutable kansujichar1 \u003c- {一}\n  let-mutable kansujichar2 \u003c- {二}\n  let-mutable kansujichar3 \u003c- {三}\n  let-mutable kansujichar4 \u003c- {四}\n  let-mutable kansujichar5 \u003c- {五}\n  let-mutable kansujichar6 \u003c- {六}\n  let-mutable kansujichar7 \u003c- {七}\n  let-mutable kansujichar8 \u003c- {八}\n  let-mutable kansujichar9 \u003c- {九}\n\n  let-inline ctx \\kansujichar0 inner = let () = kansujichar0 \u003c- inner in inline-nil\n  let-inline ctx \\kansujichar1 inner = let () = kansujichar1 \u003c- inner in inline-nil\n  let-inline ctx \\kansujichar2 inner = let () = kansujichar2 \u003c- inner in inline-nil\n  let-inline ctx \\kansujichar3 inner = let () = kansujichar3 \u003c- inner in inline-nil\n  let-inline ctx \\kansujichar4 inner = let () = kansujichar4 \u003c- inner in inline-nil\n  let-inline ctx \\kansujichar5 inner = let () = kansujichar5 \u003c- inner in inline-nil\n  let-inline ctx \\kansujichar6 inner = let () = kansujichar6 \u003c- inner in inline-nil\n  let-inline ctx \\kansujichar7 inner = let () = kansujichar7 \u003c- inner in inline-nil\n  let-inline ctx \\kansujichar8 inner = let () = kansujichar8 \u003c- inner in inline-nil\n  let-inline ctx \\kansujichar9 inner = let () = kansujichar9 \u003c- inner in inline-nil\n\n  let range s e =\n    let-rec r n = if n \u003e e then [] else n :: (r (n + 1)) in\n    if e == s then\n      [s]\n    else if e \u003c s then\n      []\n    else\n      r s\n\n  let split-into-chars s =\n    let len = string-length s in\n    (range 0 (len - 1)) |\u003e List.map (fun i -\u003e string-sub s i 1)\n\n  let to-inline-text c =\n    match c with\n    | `0` -\u003e !kansujichar0\n    | `1` -\u003e !kansujichar1\n    | `2` -\u003e !kansujichar2\n    | `3` -\u003e !kansujichar3\n    | `4` -\u003e !kansujichar4\n    | `5` -\u003e !kansujichar5\n    | `6` -\u003e !kansujichar6\n    | `7` -\u003e !kansujichar7\n    | `8` -\u003e !kansujichar8\n    | `9` -\u003e !kansujichar9\n    |  _  -\u003e {謎}\n\n  let-inline ctx \\kansuji x =\n    (split-into-chars (arabic x)) |\u003e List.fold-left (fun acc c -\u003e\n      acc ++ (read-inline ctx (to-inline-text c))\n    ) inline-nil\nend\n\nlet-inline ctx \\kansujiconfig inner = let _ = read-inline ctx inner in inline-nil\n\nin\n\ndocument (|\n  author = { Seiei MIYAGI };\n  show-title = true;\n  show-toc = false;\n  title = { SATySFiで漢数字 }\n|) '\u003c\n +p {\n   \\kansuji(1234567890);\n   \\kansujiconfig {\n     \\kansujichar0{ぜろ}\n     \\kansujichar1{いち}\n     \\kansujichar2{に}\n     \\kansujichar3{さん}\n     \\kansujichar4{し}\n     \\kansujichar5{ご}\n     \\kansujichar6{ろく}\n     \\kansujichar7{しち}\n     \\kansujichar8{はち}\n     \\kansujichar9{く}\n   }\n   \\kansuji(1234567890);\n }\n\u003e\n```\n\n## 実行結果\n\n![Screenshot from 2018-10-22 11-00-07.png](https://qiita-image-store.s3.amazonaws.com/0/2074/d10af00b-d3bd-8fa8-5567-3951e4ccc50b.png)\n","coediting":false,"comments_count":0,"created_at":"2018-10-22T11:00:45+09:00","group":null,"id":"57efc97a9d3fb921fa92","likes_count":1,"private":false,"reactions_count":0,"tags":[{"name":"SATySFi","versions":[]}],"title":"SATySFiで漢数字","updated_at":"2018-10-22T11:00:45+09:00","url":"https://qiita.com/hanachin_/items/57efc97a9d3fb921fa92","user":{"description":"既婚バイ","facebook_id":"seiei.higa","followees_count":166,"followers_count":120,"github_login_name":"hanachin","id":"hanachin_","items_count":55,"linkedin_id":"","location":"Naha, Okinawa, Japan","name":"Seiei Miyagi","organization":"YassLab","permanent_id":2074,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/2074/profile-images/1511092027","twitter_screen_name":"hanachin_","website_url":""},"page_views_count":null}]