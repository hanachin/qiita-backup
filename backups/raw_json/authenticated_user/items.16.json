[{"rendered_body":"\u003cblockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"rubyvmast-experimental\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rubyvmast-experimental\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRubyVM::AST [Experimental]\u003c/h2\u003e\n\n\u003cp\u003eRuby 2.6では RubyVM::AST モジュールが導入されました。\u003c/p\u003e\n\n\u003cp\u003eこのモジュールには、文字列をパースしてAST(抽象構文木)のNodeを返すparseメソッド、ファイルをパースするparse_fileメソッドが実装されています。 RubyVM::AST::Node も導入されました。このクラスのインスタンスから位置情報や子ノードを取得することができます。この機能はexperimentalであり、互換性は保証されていません。\u003cbr\u003e\n\u003ca href=\"https://www.ruby-lang.org/ja/news/2018/05/31/ruby-2-6-0-preview2-released/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://www.ruby-lang.org/ja/news/2018/05/31/ruby-2-6-0-preview2-released/\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"api\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#api\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eAPI\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"rubyvmast\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rubyvmast\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRubyVM::AST\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e= RubyVM::AST\n\n(from ruby core)\n------------------------------------------------------------------------\n= Class methods:\n\n  parse, parse_file\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"rubyvmastnode\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rubyvmastnode\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRubyVM::AST::Node\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e= RubyVM::AST::Node \u0026lt; Object\n\n(from ruby core)\n------------------------------------------------------------------------\n= Instance methods:\n\n  children, first_column, first_lineno, inspect, last_column,\n  last_lineno, type\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"rubyvmastparse\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rubyvmastparse\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRubyVM::AST.parse\u003c/h2\u003e\n\n\u003cp\u003eRubyのコードの文字列を渡すと、文字列をパースしてASTを返す。とりあえず無をparseしてみる。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eRubyVM\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAST\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e''\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; #\u0026lt;RubyVM::AST::Node(NODE_SCOPE(0) 1:0, 2:0): \u0026gt;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etype\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"NODE_SCOPE\"\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst_lineno\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst_column\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast_lineno\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast_column\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; [1, 0, 2, 0]\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echildren\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; [nil, #\u0026lt;RubyVM::AST::Node(NODE_BEGIN(16) 2:0, 2:0): \u0026gt;]\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eclass\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; Array\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etype\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; \"NODE_BEGIN\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echildren\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; [nil]\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"パースできない文字列を渡すとどうなるか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%91%E3%83%BC%E3%82%B9%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E6%B8%A1%E3%81%99%E3%81%A8%E3%81%A9%E3%81%86%E3%81%AA%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eパースできない文字列を渡すとどうなるか\u003c/h3\u003e\n\n\u003cp\u003eエラーが出て実行がとまる\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"no\"\u003eRubyVM\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAST\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'^^'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# no file name:1: syntax error, unexpected '^'\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003erescue\u003c/code\u003eできない\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003ebegin\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eRubyVM\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAST\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'^^'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"no\"\u003eException\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"捕まえた〜!\"\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003ep\u003c/span\u003e \u003cspan class=\"vg\"\u003e$!\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# no file name:1: syntax error, unexpected '^'\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"rubyvmastnode-1\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rubyvmastnode-1\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRubyVM::AST::Node\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"type\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#type\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e#type\u003c/h3\u003e\n\n\u003cp\u003eこの辺で定義されてる\u003ccode\u003eenum node_type\u003c/code\u003eを文字列で返す。\u003cbr\u003e\n\u003ca href=\"https://github.com/ruby/ruby/blob/v2_6_0_preview2/node.h#L22-L225\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/ruby/ruby/blob/v2_6_0_preview2/node.h#L22-L225\u003c/a\u003e\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"children\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#children\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e#children\u003c/h3\u003e\n\n\u003cp\u003e抽象構文木の葉を返す。末端までたどって表示させてみると節点に演算子(\u003ccode\u003eNODE_OPCALL\u003c/code\u003e)が来ているのがわかる。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ewalk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elevel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"s2\"\u003e\" \"\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003elevel\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003ep\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echildren\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eempty?\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;.!\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ewalk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elevel\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ewalk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enode\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003echildren\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elevel\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ewalk\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eRubyVM\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eAST\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'1 + 1'\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# #\u0026lt;RubyVM::AST::Node(NODE_SCOPE(0) 1:0, 1:5): \u0026gt;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#   nil\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#   #\u0026lt;RubyVM::AST::Node(NODE_OPCALL(36) 1:0, 1:5): \u0026gt;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#     #\u0026lt;RubyVM::AST::Node(NODE_LIT(59) 1:0, 1:1): \u0026gt;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#     #\u0026lt;RubyVM::AST::Node(NODE_ARRAY(42) 1:4, 1:5): \u0026gt;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#       #\u0026lt;RubyVM::AST::Node(NODE_LIT(59) 1:4, 1:5): \u0026gt;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#       nil\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"rubyvmastnodeをnewできるか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rubyvmastnode%E3%82%92new%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRubyVM::AST::Nodeをnewできるか\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003enew\u003c/code\u003eできない\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003eRubyVM::AST::Node.new\nTraceback (most recent call last):\n        2: from /home/sei/local/bin/irb:11:in `\u0026lt;main\u0026gt;'\n        1: from (irb):1\nNoMethodError (undefined method `new' for RubyVM::AST::Node:Class)\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"自分でastを組み立ててyarvのinstructionsequenceにコンパイルして実行できるか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%87%AA%E5%88%86%E3%81%A7ast%E3%82%92%E7%B5%84%E3%81%BF%E7%AB%8B%E3%81%A6%E3%81%A6yarv%E3%81%AEinstructionsequence%E3%81%AB%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E3%81%97%E3%81%A6%E5%AE%9F%E8%A1%8C%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e自分でASTを組み立ててYARVのInstructionSequenceにコンパイルして実行できるか\u003c/h2\u003e\n\n\u003cp\u003eYARVのInstructionSequenceに変換するAPIは公開されていないので出来なさそう。\u003c/p\u003e\n","body":"\u003e ## RubyVM::AST [Experimental]\n\u003e Ruby 2.6では RubyVM::AST モジュールが導入されました。\n\u003e\n\u003e このモジュールには、文字列をパースしてAST(抽象構文木)のNodeを返すparseメソッド、ファイルをパースするparse_fileメソッドが実装されています。 RubyVM::AST::Node も導入されました。このクラスのインスタンスから位置情報や子ノードを取得することができます。この機能はexperimentalであり、互換性は保証されていません。\nhttps://www.ruby-lang.org/ja/news/2018/05/31/ruby-2-6-0-preview2-released/\n\n## API\n\n### RubyVM::AST\n\n```\n= RubyVM::AST\n\n(from ruby core)\n------------------------------------------------------------------------\n= Class methods:\n\n  parse, parse_file\n```\n\n### RubyVM::AST::Node\n\n```\n= RubyVM::AST::Node \u003c Object\n\n(from ruby core)\n------------------------------------------------------------------------\n= Instance methods:\n\n  children, first_column, first_lineno, inspect, last_column,\n  last_lineno, type\n```\n\n## RubyVM::AST.parse\n\nRubyのコードの文字列を渡すと、文字列をパースしてASTを返す。とりあえず無をparseしてみる。\n\n```rb\nroot = RubyVM::AST.parse('')\n# =\u003e #\u003cRubyVM::AST::Node(NODE_SCOPE(0) 1:0, 2:0): \u003e\n\nroot.type\n# =\u003e \"NODE_SCOPE\"\n\n[root.first_lineno, root.first_column, root.last_lineno, root.last_column]\n# =\u003e [1, 0, 2, 0]\n\nroot.children\n# =\u003e [nil, #\u003cRubyVM::AST::Node(NODE_BEGIN(16) 2:0, 2:0): \u003e]\n\nroot.children.class\n# =\u003e Array\n\nroot.children.last.type\n# =\u003e \"NODE_BEGIN\n\nroot.children.last.children\n# =\u003e [nil]\n```\n\n### パースできない文字列を渡すとどうなるか\n\nエラーが出て実行がとまる\n\n```rb\nRubyVM::AST.parse('^^')\n# no file name:1: syntax error, unexpected '^'\n```\n\n`rescue`できない\n\n```rb\nbegin\n  RubyVM::AST.parse('^^')\nrescue Exception\n  puts \"捕まえた〜!\"\n  p $!\nend\n# no file name:1: syntax error, unexpected '^'\n```\n\n## RubyVM::AST::Node\n\n### #type\n\nこの辺で定義されてる`enum node_type`を文字列で返す。\nhttps://github.com/ruby/ruby/blob/v2_6_0_preview2/node.h#L22-L225\n\n### #children\n\n抽象構文木の葉を返す。末端までたどって表示させてみると節点に演算子(`NODE_OPCALL`)が来ているのがわかる。\n\n```rb\ndef walk(node, level = 0)\n  print \" \" * (level * 2)\n  p node\n  return unless node\u0026.children\u0026.empty?\u0026.!\n  walk(node.children.first, level + 1)\n  walk(node.children.last, level + 1)\nend\n\nwalk(RubyVM::AST.parse('1 + 1'))\n# #\u003cRubyVM::AST::Node(NODE_SCOPE(0) 1:0, 1:5): \u003e\n#   nil\n#   #\u003cRubyVM::AST::Node(NODE_OPCALL(36) 1:0, 1:5): \u003e\n#     #\u003cRubyVM::AST::Node(NODE_LIT(59) 1:0, 1:1): \u003e\n#     #\u003cRubyVM::AST::Node(NODE_ARRAY(42) 1:4, 1:5): \u003e\n#       #\u003cRubyVM::AST::Node(NODE_LIT(59) 1:4, 1:5): \u003e\n#       nil\n```\n\n## RubyVM::AST::Nodeをnewできるか\n\n`new`できない\n\n```\nRubyVM::AST::Node.new\nTraceback (most recent call last):\n        2: from /home/sei/local/bin/irb:11:in `\u003cmain\u003e'\n        1: from (irb):1\nNoMethodError (undefined method `new' for RubyVM::AST::Node:Class)\n```\n\n## 自分でASTを組み立ててYARVのInstructionSequenceにコンパイルして実行できるか\n\nYARVのInstructionSequenceに変換するAPIは公開されていないので出来なさそう。\n","coediting":false,"comments_count":0,"created_at":"2018-06-01T12:20:21+09:00","group":null,"id":"fcd5da104746e365875e","likes_count":12,"private":false,"reactions_count":0,"tags":[{"name":"Ruby","versions":[]}],"title":"RubyVM::ASTさわってみた","updated_at":"2018-06-06T00:14:00+09:00","url":"https://qiita.com/hanachin_/items/fcd5da104746e365875e","user":{"description":"既婚バイ","facebook_id":"seiei.higa","followees_count":166,"followers_count":120,"github_login_name":"hanachin","id":"hanachin_","items_count":55,"linkedin_id":"","location":"Naha, Okinawa, Japan","name":"Seiei Miyagi","organization":"YassLab","permanent_id":2074,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/2074/profile-images/1511092027","twitter_screen_name":"hanachin_","website_url":""},"page_views_count":null}]