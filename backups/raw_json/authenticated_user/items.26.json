[{"rendered_body":"\n\u003ch2\u003e\n\u003cspan id=\"railsあるある\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rails%E3%81%82%E3%82%8B%E3%81%82%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRailsあるある\u003c/h2\u003e\n\n\u003cp\u003e何気ないモデルの変更がアプリケーション全体を傷つけた\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"tldr\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#tldr\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eTL;DR\u003c/h2\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e最近の趣味アプリではコントローラーごとにモデル生やしてトップレベルのモデル使わない設計で書いていて、コールバックやデフォルトスコープ書き散らかしても影響範囲がコントローラー内だけで済むので便利だしFormオブジェクト書いてグルーしまくる必要もなく快適\u003c/p\u003e— Miyagi (@hanachin_) \u003ca href=\"https://twitter.com/hanachin_/status/958285661601087488?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2018年1月30日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\"\u003e\u003c/script\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003eアプリ全体で1モデルだとグローバル変数と一緒、モデル全体に影響でる機能がアプリ全体に影響でてつらい。機能ごとにスキップしたり使い分けはできるけどモデルごと全部分けたほうが楽、コントローラーごとに分けると責務が明確になりやすい。みたいな感じです! 詳しい記事はやる気でたら書く...\u003c/p\u003e— Miyagi (@hanachin_) \u003ca href=\"https://twitter.com/hanachin_/status/961784296347332608?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2018年2月9日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\"\u003e\u003c/script\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e自分自身ネームスペースどう切るかとかは興味なくてdefault_scopeがつらいのではなくいろんな責務があるのにActiveRecordのモデルが1つなのがつらみの根本的な原因、Formにしてもそれは残るしいっそActiveRecordごと分ける方が便利では既にmigration/micro serviceでやってるしみたいな感じなのでした\u003c/p\u003e— Miyagi (@hanachin_) \u003ca href=\"https://twitter.com/hanachin_/status/963215822251376640?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2018年2月13日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\"\u003e\u003c/script\u003e\n\n\u003cp\u003eコントローラーごとに分けろといいたいわけではなく、アプリケーション全体で1テーブル1 ActiveRecordモデルをやめて\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"経緯\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%8C%E7%B7%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e経緯\u003c/h2\u003e\n\n\u003cp\u003e子どものお世話を記録するウェッブアプリケーションを正月休みあたりから書いています。\u003csup id=\"fnref1\"\u003e\u003ca href=\"#fn1\" rel=\"footnote\" title=\"docker-composeで環境を整えたり、SQLでi18nした文字列をjsonとしてrenderしてARインスタンス経由せずに返したり、今回記事にしたARのモデルを分ける設計など普段仕事でやらない実験的なことを趣味でやっています\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003cbr\u003e\n\u003ca href=\"https://github.com/hanachin/bblog\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://github.com/hanachin/bblog\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eその中でこういう気持ちが生まれました(Refinements過激派)。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e特定のcontrollerでしかつかわないメソッド、modelに生やさずcontrollerで無名モジュール作ってrefineでよいのでは (過激派\u003c/p\u003e— Miyagi (@hanachin_) \u003ca href=\"https://twitter.com/hanachin_/status/944015787500609537?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年12月22日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\"\u003e\u003c/script\u003e\n\n\u003cp\u003eリプライで以下のようなツイートを受け取りました。\u003c/p\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\"\u003e\n\u003cp\u003e内部クラスとして HogeController::User を作るのはどうか、って話をこのあいだしてました。\u003c/p\u003e— Takafumi ONAKA (@onk) \u003ca href=\"https://twitter.com/onk/status/944079047713157120?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年12月22日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\"\u003e\u003c/script\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003eモデル消えるのヤバイｗ / HogeController 内では ::User と User とで自然に使い分けられるのが良さそうな感じで、内部クラスの方は find_by_xxx とかのクラスメソッドを置くと良いのかなと。(インスタンス側に何かが欲しいなら decorator という仕組みが既にある\u003c/p\u003e— Takafumi ONAKA (@onk) \u003ca href=\"https://twitter.com/onk/status/944081650849165312?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年12月22日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\"\u003e\u003c/script\u003e\n\n\u003cblockquote class=\"twitter-tweet\"\u003e\n\u003cp\u003e良さそうなんですが関連テーブルみたりスコープ生やしたりクラスメソッドはやすとなるとコントローラ下にコントローラ用のモデルあると便利そうですね！(パスがapp/models/hoges_controller/user.rbみたいになりそうなのに若干抵抗あり)\u003c/p\u003e— Miyagi (@hanachin_) \u003ca href=\"https://twitter.com/hanachin_/status/944084933286412289?ref_src=twsrc%5Etfw\" rel=\"nofollow noopener\" target=\"_blank\"\u003e2017年12月22日\u003c/a\u003e\n\u003c/blockquote\u003e\n\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\"\u003e\u003c/script\u003e\n\n\u003cp\u003e1月のOkinawa.rbで最近試してる話をしたとツイートしたら反響をいただき\u003csup id=\"fnref2\"\u003e\u003ca href=\"#fn2\" rel=\"footnote\" title=\"https://twitter.com/kimihito_/status/960332669954359297\"\u003e2\u003c/a\u003e\u003c/sup\u003e\u003csup id=\"fnref3\"\u003e\u003ca href=\"#fn3\" rel=\"footnote\" title=\"https://twitter.com/kazumalab/status/961824048052281345\"\u003e3\u003c/a\u003e\u003c/sup\u003e記事にした次第です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"何気ないモデルの変更がアプリケーション全体を傷つける原因\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BD%95%E6%B0%97%E3%81%AA%E3%81%84%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AE%E5%A4%89%E6%9B%B4%E3%81%8C%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E5%85%A8%E4%BD%93%E3%82%92%E5%82%B7%E3%81%A4%E3%81%91%E3%82%8B%E5%8E%9F%E5%9B%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e何気ないモデルの変更がアプリケーション全体を傷つける原因\u003c/h2\u003e\n\n\u003cp\u003eアプリケーションの規模がどんなに大きく成長しても1つのテーブルに対応するActiveRecordのモデルは常に1つ。アプリケーション全体が1つのモデルに依存!\u003cbr\u003e\nなのでモデルの振る舞いに影響が出る機能を使うとアプリケーション全体に影響がでる。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"具体的にどういう機能で問題が出やすいか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%85%B7%E4%BD%93%E7%9A%84%E3%81%AB%E3%81%A9%E3%81%86%E3%81%84%E3%81%86%E6%A9%9F%E8%83%BD%E3%81%A7%E5%95%8F%E9%A1%8C%E3%81%8C%E5%87%BA%E3%82%84%E3%81%99%E3%81%84%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e具体的にどういう機能で問題が出やすいか\u003c/h2\u003e\n\n\u003cp\u003eRailsあるある\u003csup id=\"fnref4\"\u003e\u003ca href=\"#fn4\" rel=\"footnote\" title=\"https://www.slideshare.net/tricknotes/rails-possiblestory\"\u003e4\u003c/a\u003e\u003c/sup\u003eを参考にいくつか挙げてみます。\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003edefault_scope\u003c/li\u003e\n\u003cli\u003evalidation\u003c/li\u003e\n\u003cli\u003ecallbacks\u003c/li\u003e\n\u003cli\u003eas_json\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eどれもモデルの振る舞いに影響が出るものばかりですね。\u003c/p\u003e\n\n\u003cp\u003e特にdefault_scopeに関しては地雷メソッド\u003csup id=\"fnref5\"\u003e\u003ca href=\"#fn5\" rel=\"footnote\" title=\"https://qiita.com/sinsoku/items/9cbdc5304aa3ede4a178\"\u003e5\u003c/a\u003e\u003c/sup\u003eとか撒いてはいけない種\u003csup id=\"fnref6\"\u003e\u003ca href=\"#fn6\" rel=\"footnote\" title=\"https://qiita.com/juntetsu_tei/items/a1b641f7f3b10d3ae6e1\"\u003e6\u003c/a\u003e\u003c/sup\u003eとかevil\u003csup id=\"fnref7\"\u003e\u003ca href=\"#fn7\" rel=\"footnote\" title=\"https://rails-bestpractices.com/posts/2013/06/15/default_scope-is-evil/\"\u003e7\u003c/a\u003e\u003c/sup\u003eなど過激な呼ばれ方をされています。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"逃れ方\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%80%83%E3%82%8C%E6%96%B9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e逃れ方\u003c/h2\u003e\n\n\u003cp\u003e一応それぞれ色々な方法で外したりスキップ出来ます。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"default_scope\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#default_scope\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003edefault_scope\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003eunscopedでスコープを外す\u003c/li\u003e\n\u003cli\u003ereorder, rewhereなどで条件を変更する\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"validation\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#validation\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003evalidation\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003evalidationがかからないAPIや\u003ccode\u003esave(validate: false)\u003c/code\u003eを使う\u003csup id=\"fnref8\"\u003e\u003ca href=\"#fn8\" rel=\"footnote\" title=\"http://guides.rubyonrails.org/active_record_validations.html#skipping-validations\"\u003e8\u003c/a\u003e\u003c/sup\u003e\n\u003c/li\u003e\n\u003cli\u003econtextを設定して特定の場合だけ実行されるようにする\u003ccode\u003esave(context: :account_setup)\u003c/code\u003e\u003csup id=\"fnref9\"\u003e\u003ca href=\"#fn9\" rel=\"footnote\" title=\"http://guides.rubyonrails.org/active_record_validations.html#on\"\u003e9\u003c/a\u003e\u003c/sup\u003e\n\u003c/li\u003e\n\u003cli\u003e特定の条件に合致する場合しかバリデーションしない\u003csup id=\"fnref10\"\u003e\u003ca href=\"#fn10\" rel=\"footnote\" title=\"http://guides.rubyonrails.org/active_record_validations.html#conditional-validation\"\u003e10\u003c/a\u003e\u003c/sup\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"callbacks\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#callbacks\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003ecallbacks\u003c/h3\u003e\n\n\u003cul\u003e\n\u003cli\u003ecallbackが実行されないAPIを使う\u003csup id=\"fnref11\"\u003e\u003ca href=\"#fn11\" rel=\"footnote\" title=\"http://guides.rubyonrails.org/active_record_callbacks.html#skipping-callbacks\"\u003e11\u003c/a\u003e\u003c/sup\u003e\n\u003c/li\u003e\n\u003cli\u003e特定の条件に合致する場合しかバリデーションしない\u003csup id=\"fnref12\"\u003e\u003ca href=\"#fn12\" rel=\"footnote\" title=\"http://guides.rubyonrails.org/active_record_callbacks.html#conditional-callbacks\"\u003e12\u003c/a\u003e\u003c/sup\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"as_json\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#as_json\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eas_json\u003c/h3\u003e\n\n\u003cp\u003eActiveRecordの\u003ccode\u003e:only\u003c/code\u003e, \u003ccode\u003e:except\u003c/code\u003e, \u003ccode\u003e:methods\u003c/code\u003e, \u003ccode\u003e:include\u003c/code\u003eのオプションを指定するとある程度カスタマイズできる\u003csup id=\"fnref13\"\u003e\u003ca href=\"#fn13\" rel=\"footnote\" title=\"http://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json\"\u003e13\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"逃れるの無理説\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%80%83%E3%82%8C%E3%82%8B%E3%81%AE%E7%84%A1%E7%90%86%E8%AA%AC\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e逃れるの無理説\u003c/h2\u003e\n\n\u003cp\u003eアプリケーション全体でモデル1つだとモデルが大きくなるにつれ複雑に組み合わさる。モデルを使う場所全部でこれらの機能を意識しながら書くの無理では...。\u003cbr\u003e\nということで最初から使わないほうがよいのでは、みたいな結論になりがちです。\u003c/p\u003e\n\n\u003cp\u003e単純にConcernに切り出してファイルを分けてもモデルが1つのままではモデルの変更がアプリケーション全体に影響します。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"モデル全体に影響する機能を使わない場合代わりに何を使うの\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A2%E3%83%87%E3%83%AB%E5%85%A8%E4%BD%93%E3%81%AB%E5%BD%B1%E9%9F%BF%E3%81%99%E3%82%8B%E6%A9%9F%E8%83%BD%E3%82%92%E4%BD%BF%E3%82%8F%E3%81%AA%E3%81%84%E5%A0%B4%E5%90%88%E4%BB%A3%E3%82%8F%E3%82%8A%E3%81%AB%E4%BD%95%E3%82%92%E4%BD%BF%E3%81%86%E3%81%AE\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eモデル全体に影響する機能を使わない場合、代わりに何を使うの?\u003c/h2\u003e\n\n\u003cp\u003eレールの伸ばし方\u003csup id=\"fnref14\"\u003e\u003ca href=\"#fn14\" rel=\"footnote\" title=\"https://speakerdeck.com/willnet/rerufalseshen-basifang\"\u003e14\u003c/a\u003e\u003c/sup\u003eではモデルの責務をPORO\u003csup id=\"fnref15\"\u003e\u003ca href=\"#fn15\" rel=\"footnote\" title=\"Plain Old Ruby Object、継承元なしのObjectを継承してるただのRubyのオブジェクト、class PORO; endこういうやつ。\"\u003e15\u003c/a\u003e\u003c/sup\u003e, FormObject, ServiceObjectに分ける方法が紹介されています。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"activerecord以外の層つくると意外と面倒\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#activerecord%E4%BB%A5%E5%A4%96%E3%81%AE%E5%B1%A4%E3%81%A4%E3%81%8F%E3%82%8B%E3%81%A8%E6%84%8F%E5%A4%96%E3%81%A8%E9%9D%A2%E5%80%92\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eActiveRecord以外の層つくると意外と面倒\u003c/h3\u003e\n\n\u003cp\u003eActiveRecordを使うとparamsで受け取った文字列を渡すだけでいい感じに型変換してくれてべんりです。\u003cbr\u003e\nForm Objectなどを分けた場合、このあたりの型変換のコードでかなり記述量が増えたりします。\u003csup id=\"fnref16\"\u003e\u003ca href=\"#fn16\" rel=\"footnote\" title=\"ActiveModel::Attributesが使えるようになればPOROでも同じように型変換できるので問題なくなるかも https://qiita.com/alpaca_taichou/items/bebace92f06af3f32898\"\u003e16\u003c/a\u003e\u003c/sup\u003e\u003cbr\u003e\nなのでForm Objectを作りやすくするためのまた別のgemを導入することが多いです。\u003csup id=\"fnref17\"\u003e\u003ca href=\"#fn17\" rel=\"footnote\" title=\"学習コスト💪\"\u003e17\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"例えばモデルのクラスを分ける\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BE%8B%E3%81%88%E3%81%B0%E3%83%A2%E3%83%87%E3%83%AB%E3%81%AE%E3%82%AF%E3%83%A9%E3%82%B9%E3%82%92%E5%88%86%E3%81%91%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e例えばモデルのクラスを分ける\u003c/h2\u003e\n\n\u003cp\u003eモデルの振る舞いの影響範囲がアプリケーション全体に及んでしまうのがつらみの原因なら、責務ごとにモデルごと別々に分けると疎になって便利では?\u003cbr\u003e\n以下で普段の開発の中でActiveRecordのクラスを分ける例を挙げます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"例-マイグレーション実行時に使うモデル\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BE%8B-%E3%83%9E%E3%82%A4%E3%82%B0%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E5%AE%9F%E8%A1%8C%E6%99%82%E3%81%AB%E4%BD%BF%E3%81%86%E3%83%A2%E3%83%87%E3%83%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e例: マイグレーション実行時に使うモデル\u003c/h2\u003e\n\n\u003cp\u003eマイグレーション作成時のチェックポイント\u003csup id=\"fnref18\"\u003e\u003ca href=\"#fn18\" rel=\"footnote\" title=\"https://qiita.com/nay3/items/ef773006cd7f815a07cd\"\u003e18\u003c/a\u003e\u003c/sup\u003eから引用します。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eapp/models 下のモデルクラスなど、マイグレーションファイルの外部に定義している、将来実装を変更する可能性のあるクラスを直接利用することは禁じ手と考えた方がいいでしょう。\u003cbr\u003e\nなぜかというと、マイグレーションファイルというのは、未来にわたって末永く、書いたときの意図どおりに動く 必要があるからです。言い換えれば、マイグレーションファイルのコードは、マイグレーションファイル内で閉じていて、凍結されていることが望ましい のです。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"問題-1つのクラスに2つの責務\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%95%8F%E9%A1%8C-1%E3%81%A4%E3%81%AE%E3%82%AF%E3%83%A9%E3%82%B9%E3%81%AB2%E3%81%A4%E3%81%AE%E8%B2%AC%E5%8B%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e問題: 1つのクラスに2つの責務\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"c1\"\u003e# app/models/user.rb\u003c/span\u003e\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"no\"\u003eUNKNOWN_BIRTHDAY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9999\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e'date'\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAddBirthdayDateToUsers\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eMigration\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e5.1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eup\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eadd_column\u003c/span\u003e \u003cspan class=\"ss\"\u003e:users\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthday_date\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:date\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereset_column_information\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_each\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ebirthday_date\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eyear\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emonth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eday\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ebirthday_date: \u003c/span\u003e\u003cspan class=\"n\"\u003ebirthday_date\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eUNKNOWN_BIRTHDAY\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echange_column_null\u003c/span\u003e \u003cspan class=\"ss\"\u003e:users\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthday_date\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e上記のようにマイグレーション実行時にアプリケーションで定義したActiveRecordのクラスを参照すると、アプリケーションコードにマイグレーションのコードが依存し、1つのクラスに2つの責務が生まれます💪\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eアプリケーションを実行するための責務\u003c/li\u003e\n\u003cli\u003eマイグレーションを実行するための責務\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eこの場合、アプリケーションを実行するための修正がマイグレーション実行に影響を及ぼす可能性があります。\u003cbr\u003e\n具体的な例をRails で信頼性の高い Migration を書くには\u003csup id=\"fnref19\"\u003e\u003ca href=\"#fn19\" rel=\"footnote\" title=\"https://qiita.com/shuhei/items/c0a6c3e29c87de6dff63#migration-%E6%AF%8E%E3%81%AB%E5%B0%82%E7%94%A8%E3%81%AE-model-%E3%82%92%E7%94%A8%E6%84%8F%E3%81%99%E3%82%8B\"\u003e19\u003c/a\u003e\u003c/sup\u003eから引用すると以下のような感じです。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e特に Model を使ってデータの移行を行う場合は注意が必要です。create, update, where など一部のメソッドしか使わないつもりでついついそのまま使ってしまいがちですが、hook や default_scope、validation などの変化によって知らぬうちに挙動が変わってしまいます。Migration 毎に専用の Model を作りましょう。\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"解決策-マイグレーション用のモデルをつくる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96-%E3%83%9E%E3%82%A4%E3%82%B0%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E7%94%A8%E3%81%AE%E3%83%A2%E3%83%87%E3%83%AB%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e解決策: マイグレーション用のモデルをつくる\u003c/h3\u003e\n\n\u003cp\u003eマイグレーションファイル中でマイグレーションの実行に必要な責務だけを持ったActiveRecordのクラスを宣言します。アプリケーションコードの変更がマイグレーションに影響することはありません。\u003csup id=\"fnref20\"\u003e\u003ca href=\"#fn20\" rel=\"footnote\" title=\"ActiveRecordではテーブルごとにスキーマの情報をキャッシュしておりクラスが分かれていても影響が出る場合があります。reset_column_informationを呼んでいるのはキャッシュをクリアするためです。詳しくはonkさんの記事を読みましょう。 https://blog.onk.ninja/2017/10/18/use_reset_column_information\"\u003e20\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003erequire\u003c/span\u003e \u003cspan class=\"s1\"\u003e'date'\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAddBirthdayDateToUsers\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eMigration\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e5.1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eActiveRecord\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eBase\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eUNKNOWN_BIRTHDAY\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9999\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eup\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eadd_column\u003c/span\u003e \u003cspan class=\"ss\"\u003e:users\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthday_date\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:date\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efind_each\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ebirthday_date\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eyear\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emonth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eday\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003erescue\u003c/span\u003e \u003cspan class=\"kp\"\u003enil\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eupdate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003ebirthday_date: \u003c/span\u003e\u003cspan class=\"n\"\u003ebirthday_date\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"no\"\u003eUNKNOWN_BIRTHDAY\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"n\"\u003echange_column_null\u003c/span\u003e \u003cspan class=\"ss\"\u003e:users\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthday_date\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ereset_column_information\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003edown\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eremove_column\u003c/span\u003e \u003cspan class=\"ss\"\u003e:users\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003e:birthday_date\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"責務に応じてモデルを分けるとよいのでは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%B2%AC%E5%8B%99%E3%81%AB%E5%BF%9C%E3%81%98%E3%81%A6%E3%83%A2%E3%83%87%E3%83%AB%E3%82%92%E5%88%86%E3%81%91%E3%82%8B%E3%81%A8%E3%82%88%E3%81%84%E3%81%AE%E3%81%A7%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e責務に応じてモデルを分けるとよいのでは\u003c/h2\u003e\n\n\u003cp\u003e上記の例ではActiveRecordのモデルをわけた例を紹介しました。\u003cbr\u003e\nモデルを分けた結果、モデルが単一責任になり、モデルへの変更が別のモデルやアプリケーションコードに影響しなくなりました。\u003cbr\u003e\nふつうのアプリケーションのコードも無理して1つのモデルに全部詰め込まず、マイグレーションのようにActiveRecordのモデルを分けるとよいのでは?\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"影響範囲が狭くなる\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%BD%B1%E9%9F%BF%E7%AF%84%E5%9B%B2%E3%81%8C%E7%8B%AD%E3%81%8F%E3%81%AA%E3%82%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e影響範囲が狭くなる\u003c/h3\u003e\n\n\u003cp\u003e目的ごとにモデルを定義すると影響範囲がアプリケーション全体から狭まります。\u003cbr\u003e\n\u003ccode\u003edefault_scope\u003c/code\u003eや\u003ccode\u003evalidation\u003c/code\u003eや\u003ccode\u003ecallbacks\u003c/code\u003eや\u003ccode\u003eas_json\u003c/code\u003eを書き散らかしても、他のモデルに影響しないので便利そうです。\u003c/p\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"railsの機能がそのまま使えて便利\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#rails%E3%81%AE%E6%A9%9F%E8%83%BD%E3%81%8C%E3%81%9D%E3%81%AE%E3%81%BE%E3%81%BE%E4%BD%BF%E3%81%88%E3%81%A6%E4%BE%BF%E5%88%A9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eRailsの機能がそのまま使えて便利\u003c/h3\u003e\n\n\u003cp\u003eふつうのActiveRecordのクラスなので型変換や慣れ親しんだAPIをそのまま使えます。\u003cbr\u003e\n他のgemの使い方を覚える必要はありません。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"やりかた\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%84%E3%82%8A%E3%81%8B%E3%81%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eやりかた\u003c/h2\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"例-登録が完了したときメールを送りたい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BE%8B-%E7%99%BB%E9%8C%B2%E3%81%8C%E5%AE%8C%E4%BA%86%E3%81%97%E3%81%9F%E3%81%A8%E3%81%8D%E3%83%A1%E3%83%BC%E3%83%AB%E3%82%92%E9%80%81%E3%82%8A%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e例: 登録が完了したときメールを送りたい\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"ruby\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp/models/signup_user.rb\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSignupUser\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eUser\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eafter_save\u003c/span\u003e \u003cspan class=\"ss\"\u003e:send_signup_email\u003c/span\u003e\n\n  \u003cspan class=\"kp\"\u003eprivate\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003esend_signup_email\u003c/span\u003e\n    \u003cspan class=\"no\"\u003eUserMailer\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esignup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"nf\"\u003edeliver_later\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"ruby\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp/controllers/signup_controller.rb\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSignupController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eSignupUser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esave\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eredirect_to\u003c/span\u003e \u003cspan class=\"n\"\u003eroot_path\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"s1\"\u003e'new'\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"例-公開されている記事だけを表示したい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BE%8B-%E5%85%AC%E9%96%8B%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E8%A8%98%E4%BA%8B%E3%81%A0%E3%81%91%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e例: 公開されている記事だけを表示したい\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"ruby\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp/models/article.rb\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticle\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"ruby\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp/models/published_article.rb\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePublishedArticle\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etable_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"articles\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003edefault_scope\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003ewhere\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003epublished: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"ruby\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp/controllers/articles_controller.rb\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticlesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eindex\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 一覧用\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@articles\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003ePublishedArticle\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eorder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003epublished_at: :desc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# 新規作成用\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@new_article\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eArticle\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch3\u003e\n\u003cspan id=\"例-作るときだけ関連レコードのpresenceを確認したい\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%BE%8B-%E4%BD%9C%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%A0%E3%81%91%E9%96%A2%E9%80%A3%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AEpresence%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%97%E3%81%9F%E3%81%84\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e例: 作るときだけ関連レコードのpresenceを確認したい\u003c/h3\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"ruby\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp/models/article.rb\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticle\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationRecord\u003c/span\u003e\n  \u003cspan class=\"n\"\u003ebelongs_to\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003eoptional: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"ruby\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp/models/new_article.rb\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eNewArticle\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eArticle\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etable_name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"articles\"\u003c/span\u003e\n  \u003cspan class=\"n\"\u003evalidates\u003c/span\u003e \u003cspan class=\"ss\"\u003e:author\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"ss\"\u003epresence: \u003c/span\u003e\u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"ruby\"\u003e\n\u003cdiv class=\"code-lang\"\u003e\u003cspan class=\"bold\"\u003eapp/controllers/articles_controller.rb\u003c/span\u003e\u003c/div\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eArticlesController\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"no\"\u003eApplicationController\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate\u003c/span\u003e\n    \u003cspan class=\"vi\"\u003e@new_article\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"no\"\u003eNewArticle\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eparams\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"vi\"\u003e@new_article\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esave\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eredirect_to\u003c/span\u003e \u003cspan class=\"vi\"\u003e@new_article\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n      \u003cspan class=\"n\"\u003erender\u003c/span\u003e \u003cspan class=\"s1\"\u003e'new'\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"まとめ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eまとめ\u003c/h2\u003e\n\n\u003cp\u003eアプリケーション全体で1つのテーブルに対応するActiveRecordのモデルが1つだとモデル全体に影響でる機能がアプリケーション全体に影響でてつらい。\u003cbr\u003e\n\u003ccode\u003edefault_scope\u003c/code\u003eや\u003ccode\u003evalidation\u003c/code\u003eや\u003ccode\u003ecallbacks\u003c/code\u003eや\u003ccode\u003eas_json\u003c/code\u003eなどモデル全体に影響が出るメソッドでつらみが生まれるのは、それらの機能自体が悪いわけではなく、アプリケーション全体で1モデルを共有しているのが原因ではないか?\u003cbr\u003e\nアプリケーションの様々な場面での責務を1つのActiveRecordのモデルに詰め込むとつらいので、責務に応じて同じテーブルを参照するActiveRecordのモデルを分けるとよいのでは、影響範囲が狭まるしActiveRecordの機能がそのまま使えて便利!というご提案でした。\u003c/p\u003e\n\n\u003cp\u003e1つのテーブルに対応するActiveRecordのモデルを分けるのはマイグレーションやマイクロサービスなどで既にやっている人も多いと思いますが、アプリケーションコードでも分けてこ💪\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"懸念\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%87%B8%E5%BF%B5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e懸念\u003c/h2\u003e\n\n\u003cp\u003e最近の趣味のアプリケーションでちょっと試した感じよさそうでしたが大きいアプリケーションになるとまた別のつらみが発生しそう。\u003csup id=\"fnref21\"\u003e\u003ca href=\"#fn21\" rel=\"footnote\" title=\"複雑な実業務でやると影響範囲がアプリケーション全体から特定のモデルを使う機能に変わるだけで結局モデルクラスが増えた分メンテコスト増えたり、同じテーブルに対する操作が複数のモデルに散らばってしまいそう(concernでまとめてあげれば再利用できそうですが)、これはFormオブジェクトに分けても同じかな。\"\u003e21\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\n\u003cdiv class=\"footnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\n\u003cli id=\"fn1\"\u003e\n\u003cp\u003edocker-composeで環境を整えたり、SQLでi18nした文字列をjsonとしてrenderしてARインスタンス経由せずに返したり、今回記事にしたARのモデルを分ける設計など普段仕事でやらない実験的なことを趣味でやっています \u003ca href=\"#fnref1\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn2\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/kimihito_/status/960332669954359297\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://twitter.com/kimihito_/status/960332669954359297\u003c/a\u003e \u003ca href=\"#fnref2\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn3\"\u003e\n\u003cp\u003e\u003ca href=\"https://twitter.com/kazumalab/status/961824048052281345\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://twitter.com/kazumalab/status/961824048052281345\u003c/a\u003e \u003ca href=\"#fnref3\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn4\"\u003e\n\u003cp\u003e\u003ca href=\"https://www.slideshare.net/tricknotes/rails-possiblestory\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://www.slideshare.net/tricknotes/rails-possiblestory\u003c/a\u003e \u003ca href=\"#fnref4\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn5\"\u003e\n\u003cp\u003e\u003ca href=\"https://qiita.com/sinsoku/items/9cbdc5304aa3ede4a178\" class=\"autolink\" id=\"reference-15e7594580cb05dc6319\"\u003ehttps://qiita.com/sinsoku/items/9cbdc5304aa3ede4a178\u003c/a\u003e \u003ca href=\"#fnref5\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn6\"\u003e\n\u003cp\u003e\u003ca href=\"https://qiita.com/juntetsu_tei/items/a1b641f7f3b10d3ae6e1\" class=\"autolink\" id=\"reference-41fd174e82ce0539f3ba\"\u003ehttps://qiita.com/juntetsu_tei/items/a1b641f7f3b10d3ae6e1\u003c/a\u003e \u003ca href=\"#fnref6\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn7\"\u003e\n\u003cp\u003e\u003ca href=\"https://rails-bestpractices.com/posts/2013/06/15/default_scope-is-evil/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://rails-bestpractices.com/posts/2013/06/15/default_scope-is-evil/\u003c/a\u003e \u003ca href=\"#fnref7\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn8\"\u003e\n\u003cp\u003e\u003ca href=\"http://guides.rubyonrails.org/active_record_validations.html#skipping-validations\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://guides.rubyonrails.org/active_record_validations.html#skipping-validations\u003c/a\u003e \u003ca href=\"#fnref8\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn9\"\u003e\n\u003cp\u003e\u003ca href=\"http://guides.rubyonrails.org/active_record_validations.html#on\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://guides.rubyonrails.org/active_record_validations.html#on\u003c/a\u003e \u003ca href=\"#fnref9\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn10\"\u003e\n\u003cp\u003e\u003ca href=\"http://guides.rubyonrails.org/active_record_validations.html#conditional-validation\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://guides.rubyonrails.org/active_record_validations.html#conditional-validation\u003c/a\u003e \u003ca href=\"#fnref10\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn11\"\u003e\n\u003cp\u003e\u003ca href=\"http://guides.rubyonrails.org/active_record_callbacks.html#skipping-callbacks\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://guides.rubyonrails.org/active_record_callbacks.html#skipping-callbacks\u003c/a\u003e \u003ca href=\"#fnref11\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn12\"\u003e\n\u003cp\u003e\u003ca href=\"http://guides.rubyonrails.org/active_record_callbacks.html#conditional-callbacks\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://guides.rubyonrails.org/active_record_callbacks.html#conditional-callbacks\u003c/a\u003e \u003ca href=\"#fnref12\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn13\"\u003e\n\u003cp\u003e\u003ca href=\"http://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttp://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json\u003c/a\u003e \u003ca href=\"#fnref13\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn14\"\u003e\n\u003cp\u003e\u003ca href=\"https://speakerdeck.com/willnet/rerufalseshen-basifang\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://speakerdeck.com/willnet/rerufalseshen-basifang\u003c/a\u003e \u003ca href=\"#fnref14\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn15\"\u003e\n\u003cp\u003ePlain Old Ruby Object、継承元なしのObjectを継承してるただのRubyのオブジェクト、\u003ccode\u003eclass PORO; end\u003c/code\u003eこういうやつ。 \u003ca href=\"#fnref15\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn16\"\u003e\n\u003cp\u003e\u003ccode\u003eActiveModel::Attributes\u003c/code\u003eが使えるようになればPOROでも同じように型変換できるので問題なくなるかも \u003ca href=\"https://qiita.com/alpaca_taichou/items/bebace92f06af3f32898\" class=\"autolink\" id=\"reference-3a344685bc9f5b77b84a\"\u003ehttps://qiita.com/alpaca_taichou/items/bebace92f06af3f32898\u003c/a\u003e \u003ca href=\"#fnref16\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn17\"\u003e\n\u003cp\u003e学習コスト💪 \u003ca href=\"#fnref17\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn18\"\u003e\n\u003cp\u003e\u003ca href=\"https://qiita.com/nay3/items/ef773006cd7f815a07cd\" class=\"autolink\" id=\"reference-d7d001c4ffba0f327bf4\"\u003ehttps://qiita.com/nay3/items/ef773006cd7f815a07cd\u003c/a\u003e \u003ca href=\"#fnref18\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn19\"\u003e\n\u003cp\u003e\u003ca href=\"https://qiita.com/shuhei/items/c0a6c3e29c87de6dff63#migration-%E6%AF%8E%E3%81%AB%E5%B0%82%E7%94%A8%E3%81%AE-model-%E3%82%92%E7%94%A8%E6%84%8F%E3%81%99%E3%82%8B\" class=\"autolink\" id=\"reference-99bb854008cbaab90c71\"\u003ehttps://qiita.com/shuhei/items/c0a6c3e29c87de6dff63#migration-%E6%AF%8E%E3%81%AB%E5%B0%82%E7%94%A8%E3%81%AE-model-%E3%82%92%E7%94%A8%E6%84%8F%E3%81%99%E3%82%8B\u003c/a\u003e \u003ca href=\"#fnref19\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn20\"\u003e\n\u003cp\u003eActiveRecordではテーブルごとにスキーマの情報をキャッシュしておりクラスが分かれていても影響が出る場合があります。\u003ccode\u003ereset_column_information\u003c/code\u003eを呼んでいるのはキャッシュをクリアするためです。詳しくはonkさんの記事を読みましょう。 \u003ca href=\"https://blog.onk.ninja/2017/10/18/use_reset_column_information\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://blog.onk.ninja/2017/10/18/use_reset_column_information\u003c/a\u003e \u003ca href=\"#fnref20\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003cli id=\"fn21\"\u003e\n\u003cp\u003e複雑な実業務でやると影響範囲がアプリケーション全体から特定のモデルを使う機能に変わるだけで結局モデルクラスが増えた分メンテコスト増えたり、同じテーブルに対する操作が複数のモデルに散らばってしまいそう(concernでまとめてあげれば再利用できそうですが)、これはFormオブジェクトに分けても同じかな。 \u003ca href=\"#fnref21\"\u003e↩\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\n\u003c/ol\u003e\n\u003c/div\u003e\n","body":"## Railsあるある\n\n何気ないモデルの変更がアプリケーション全体を傷つけた\n\n## TL;DR\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e最近の趣味アプリではコントローラーごとにモデル生やしてトップレベルのモデル使わない設計で書いていて、コールバックやデフォルトスコープ書き散らかしても影響範囲がコントローラー内だけで済むので便利だしFormオブジェクト書いてグルーしまくる必要もなく快適\u003c/p\u003e\u0026mdash; Miyagi (@hanachin_) \u003ca href=\"https://twitter.com/hanachin_/status/958285661601087488?ref_src=twsrc%5Etfw\"\u003e2018年1月30日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eアプリ全体で1モデルだとグローバル変数と一緒、モデル全体に影響でる機能がアプリ全体に影響でてつらい。機能ごとにスキップしたり使い分けはできるけどモデルごと全部分けたほうが楽、コントローラーごとに分けると責務が明確になりやすい。みたいな感じです! 詳しい記事はやる気でたら書く...\u003c/p\u003e\u0026mdash; Miyagi (@hanachin_) \u003ca href=\"https://twitter.com/hanachin_/status/961784296347332608?ref_src=twsrc%5Etfw\"\u003e2018年2月9日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e自分自身ネームスペースどう切るかとかは興味なくてdefault_scopeがつらいのではなくいろんな責務があるのにActiveRecordのモデルが1つなのがつらみの根本的な原因、Formにしてもそれは残るしいっそActiveRecordごと分ける方が便利では既にmigration/micro serviceでやってるしみたいな感じなのでした\u003c/p\u003e\u0026mdash; Miyagi (@hanachin_) \u003ca href=\"https://twitter.com/hanachin_/status/963215822251376640?ref_src=twsrc%5Etfw\"\u003e2018年2月13日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\nコントローラーごとに分けろといいたいわけではなく、アプリケーション全体で1テーブル1 ActiveRecordモデルをやめて\n\n## 経緯\n\n子どものお世話を記録するウェッブアプリケーションを正月休みあたりから書いています。[^bblog]\nhttps://github.com/hanachin/bblog\n\n[^bblog]: docker-composeで環境を整えたり、SQLでi18nした文字列をjsonとしてrenderしてARインスタンス経由せずに返したり、今回記事にしたARのモデルを分ける設計など普段仕事でやらない実験的なことを趣味でやっています\n\nその中でこういう気持ちが生まれました(Refinements過激派)。\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e特定のcontrollerでしかつかわないメソッド、modelに生やさずcontrollerで無名モジュール作ってrefineでよいのでは (過激派\u003c/p\u003e\u0026mdash; Miyagi (@hanachin_) \u003ca href=\"https://twitter.com/hanachin_/status/944015787500609537?ref_src=twsrc%5Etfw\"\u003e2017年12月22日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\nリプライで以下のようなツイートを受け取りました。\n\n\u003cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e内部クラスとして HogeController::User を作るのはどうか、って話をこのあいだしてました。\u003c/p\u003e\u0026mdash; Takafumi ONAKA (@onk) \u003ca href=\"https://twitter.com/onk/status/944079047713157120?ref_src=twsrc%5Etfw\"\u003e2017年12月22日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003eモデル消えるのヤバイｗ / HogeController 内では ::User と User とで自然に使い分けられるのが良さそうな感じで、内部クラスの方は find_by_xxx とかのクラスメソッドを置くと良いのかなと。(インスタンス側に何かが欲しいなら decorator という仕組みが既にある\u003c/p\u003e\u0026mdash; Takafumi ONAKA (@onk) \u003ca href=\"https://twitter.com/onk/status/944081650849165312?ref_src=twsrc%5Etfw\"\u003e2017年12月22日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n\u003cblockquote class=\"twitter-tweet\" data-lang=\"ja\"\u003e\u003cp lang=\"ja\" dir=\"ltr\"\u003e良さそうなんですが関連テーブルみたりスコープ生やしたりクラスメソッドはやすとなるとコントローラ下にコントローラ用のモデルあると便利そうですね！(パスがapp/models/hoges_controller/user.rbみたいになりそうなのに若干抵抗あり)\u003c/p\u003e\u0026mdash; Miyagi (@hanachin_) \u003ca href=\"https://twitter.com/hanachin_/status/944084933286412289?ref_src=twsrc%5Etfw\"\u003e2017年12月22日\u003c/a\u003e\u003c/blockquote\u003e\n\u003cscript async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"\u003e\u003c/script\u003e\n\n1月のOkinawa.rbで最近試してる話をしたとツイートしたら反響をいただき[^kimihito_][^kazuma_lab]記事にした次第です。\n\n[^kazuma_lab]: https://twitter.com/kazumalab/status/961824048052281345\n[^kimihito_]: https://twitter.com/kimihito_/status/960332669954359297\n\n\n## 何気ないモデルの変更がアプリケーション全体を傷つける原因\n\nアプリケーションの規模がどんなに大きく成長しても1つのテーブルに対応するActiveRecordのモデルは常に1つ。アプリケーション全体が1つのモデルに依存!\nなのでモデルの振る舞いに影響が出る機能を使うとアプリケーション全体に影響がでる。\n\n## 具体的にどういう機能で問題が出やすいか\n\nRailsあるある[^anti_pattern]を参考にいくつか挙げてみます。\n\n- default_scope\n- validation\n- callbacks\n- as_json\n\nどれもモデルの振る舞いに影響が出るものばかりですね。\n\n特にdefault_scopeに関しては地雷メソッド[^mine]とか撒いてはいけない種[^pain_in_the_neck]とかevil[^default_scope_is_evil]など過激な呼ばれ方をされています。\n\n[^anti_pattern]: https://www.slideshare.net/tricknotes/rails-possiblestory\n[^mine]: https://qiita.com/sinsoku/items/9cbdc5304aa3ede4a178\n[^pain_in_the_neck]: https://qiita.com/juntetsu_tei/items/a1b641f7f3b10d3ae6e1\n[^default_scope_is_evil]: https://rails-bestpractices.com/posts/2013/06/15/default_scope-is-evil/\n\n## 逃れ方\n\n一応それぞれ色々な方法で外したりスキップ出来ます。\n\n### default_scope\n\n- unscopedでスコープを外す\n- reorder, rewhereなどで条件を変更する\n\n### validation\n\n- validationがかからないAPIや`save(validate: false)`を使う[^skipping_validations]\n- contextを設定して特定の場合だけ実行されるようにする`save(context: :account_setup)`[^ar_validation_on]\n- 特定の条件に合致する場合しかバリデーションしない[^conditional_validation]\n\n[^skipping_validations]: http://guides.rubyonrails.org/active_record_validations.html#skipping-validations\n[^ar_validation_on]: http://guides.rubyonrails.org/active_record_validations.html#on\n[^conditional_validation]: http://guides.rubyonrails.org/active_record_validations.html#conditional-validation\n\n### callbacks\n\n- callbackが実行されないAPIを使う[^skipping_callbacks]\n- 特定の条件に合致する場合しかバリデーションしない[^conditional_callbacks]\n\n[^skipping_callbacks]: http://guides.rubyonrails.org/active_record_callbacks.html#skipping-callbacks\n[^conditional_callbacks]: http://guides.rubyonrails.org/active_record_callbacks.html#conditional-callbacks\n\n### as_json\n\nActiveRecordの`:only`, `:except`, `:methods`, `:include`のオプションを指定するとある程度カスタマイズできる[^as_json]\n\n[^as_json]: http://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-as_json\n\n## 逃れるの無理説\n\nアプリケーション全体でモデル1つだとモデルが大きくなるにつれ複雑に組み合わさる。モデルを使う場所全部でこれらの機能を意識しながら書くの無理では...。\nということで最初から使わないほうがよいのでは、みたいな結論になりがちです。\n\n単純にConcernに切り出してファイルを分けてもモデルが1つのままではモデルの変更がアプリケーション全体に影響します。\n\n## モデル全体に影響する機能を使わない場合、代わりに何を使うの?\n\nレールの伸ばし方[^extend_the_rail]ではモデルの責務をPORO[^poro], FormObject, ServiceObjectに分ける方法が紹介されています。\n\n[^extend_the_rail]: https://speakerdeck.com/willnet/rerufalseshen-basifang\n[^poro]: Plain Old Ruby Object、継承元なしのObjectを継承してるただのRubyのオブジェクト、`class PORO; end`こういうやつ。\n\n### ActiveRecord以外の層つくると意外と面倒\n\nActiveRecordを使うとparamsで受け取った文字列を渡すだけでいい感じに型変換してくれてべんりです。\nForm Objectなどを分けた場合、このあたりの型変換のコードでかなり記述量が増えたりします。[^active_record_attributes_is_awesome]\nなのでForm Objectを作りやすくするためのまた別のgemを導入することが多いです。[^ganbari]\n\n[^active_record_attributes_is_awesome]: `ActiveModel::Attributes`が使えるようになればPOROでも同じように型変換できるので問題なくなるかも https://qiita.com/alpaca_taichou/items/bebace92f06af3f32898\n[^ganbari]: 学習コスト💪\n\n## 例えばモデルのクラスを分ける\n\nモデルの振る舞いの影響範囲がアプリケーション全体に及んでしまうのがつらみの原因なら、責務ごとにモデルごと別々に分けると疎になって便利では?\n以下で普段の開発の中でActiveRecordのクラスを分ける例を挙げます。\n\n## 例: マイグレーション実行時に使うモデル\n\nマイグレーション作成時のチェックポイント[^migration_checkpoint]から引用します。\n\n\u003e app/models 下のモデルクラスなど、マイグレーションファイルの外部に定義している、将来実装を変更する可能性のあるクラスを直接利用することは禁じ手と考えた方がいいでしょう。\n\u003e なぜかというと、マイグレーションファイルというのは、未来にわたって末永く、書いたときの意図どおりに動く 必要があるからです。言い換えれば、マイグレーションファイルのコードは、マイグレーションファイル内で閉じていて、凍結されていることが望ましい のです。\n\n[^migration_checkpoint]: https://qiita.com/nay3/items/ef773006cd7f815a07cd\n\n### 問題: 1つのクラスに2つの責務\n\n```rb\n# app/models/user.rb\nclass User \u003c ApplicationRecord\n  UNKNOWN_BIRTHDAY = Date.new(9999, 1, 1)\nend\n```\n\n```rb\nrequire 'date'\n\nclass AddBirthdayDateToUsers \u003c ActiveRecord::Migration[5.1]\n  def up\n    add_column :users, :birthday_date, :date\n    User.reset_column_information\n    User.find_each do |u|\n      birthday_date = Date.new(u.year, u.month, u.day) rescue nil\n      u.update(birthday_date: birthday_date || User::UNKNOWN_BIRTHDAY)\n    end\n    change_column_null :users, :birthday_date, false\n  end\n\nend\n```\n\n上記のようにマイグレーション実行時にアプリケーションで定義したActiveRecordのクラスを参照すると、アプリケーションコードにマイグレーションのコードが依存し、1つのクラスに2つの責務が生まれます💪\n\n- アプリケーションを実行するための責務\n- マイグレーションを実行するための責務\n\nこの場合、アプリケーションを実行するための修正がマイグレーション実行に影響を及ぼす可能性があります。\n具体的な例をRails で信頼性の高い Migration を書くには[^reliable_migration]から引用すると以下のような感じです。\n\n\u003e 特に Model を使ってデータの移行を行う場合は注意が必要です。create, update, where など一部のメソッドしか使わないつもりでついついそのまま使ってしまいがちですが、hook や default_scope、validation などの変化によって知らぬうちに挙動が変わってしまいます。Migration 毎に専用の Model を作りましょう。\n\n[^reliable_migration]: https://qiita.com/shuhei/items/c0a6c3e29c87de6dff63#migration-%E6%AF%8E%E3%81%AB%E5%B0%82%E7%94%A8%E3%81%AE-model-%E3%82%92%E7%94%A8%E6%84%8F%E3%81%99%E3%82%8B\n\n\n### 解決策: マイグレーション用のモデルをつくる\n\nマイグレーションファイル中でマイグレーションの実行に必要な責務だけを持ったActiveRecordのクラスを宣言します。アプリケーションコードの変更がマイグレーションに影響することはありません。[^why_reset_column_info]\n\n\n```rb\nrequire 'date'\n\nclass AddBirthdayDateToUsers \u003c ActiveRecord::Migration[5.1]\n  class User \u003c ActiveRecord::Base\n    UNKNOWN_BIRTHDAY = Date.new(9999, 1, 1)\n  end\n\n  def up\n    add_column :users, :birthday_date, :date\n    User.find_each do |u|\n      birthday_date = Date.new(u.year, u.month, u.day) rescue nil\n      u.update(birthday_date: birthday_date || User::UNKNOWN_BIRTHDAY)\n    end\n    change_column_null :users, :birthday_date, false\n    User.reset_column_information\n  end\n\n  def down\n    remove_column :users, :birthday_date\n  end\nend\n```\n\n[^why_reset_column_info]: ActiveRecordではテーブルごとにスキーマの情報をキャッシュしておりクラスが分かれていても影響が出る場合があります。`reset_column_information`を呼んでいるのはキャッシュをクリアするためです。詳しくはonkさんの記事を読みましょう。 https://blog.onk.ninja/2017/10/18/use_reset_column_information\n\n## 責務に応じてモデルを分けるとよいのでは\n\n上記の例ではActiveRecordのモデルをわけた例を紹介しました。\nモデルを分けた結果、モデルが単一責任になり、モデルへの変更が別のモデルやアプリケーションコードに影響しなくなりました。\nふつうのアプリケーションのコードも無理して1つのモデルに全部詰め込まず、マイグレーションのようにActiveRecordのモデルを分けるとよいのでは?\n\n### 影響範囲が狭くなる\n\n目的ごとにモデルを定義すると影響範囲がアプリケーション全体から狭まります。\n`default_scope`や`validation`や`callbacks`や`as_json`を書き散らかしても、他のモデルに影響しないので便利そうです。\n\n### Railsの機能がそのまま使えて便利\n\nふつうのActiveRecordのクラスなので型変換や慣れ親しんだAPIをそのまま使えます。\n他のgemの使い方を覚える必要はありません。\n\n## やりかた\n\n### 例: 登録が完了したときメールを送りたい\n\n```app/models/signup_user.rb\nclass SignupUser \u003c User\n  after_save :send_signup_email\n\n  private\n\n  def send_signup_email\n    UserMailer.signup(self).deliver_later\n  end\nend\n```\n\n```app/controllers/signup_controller.rb\nclass SignupController \u003c ApplicationController\n  def create\n    user = SignupUser.new(params)\n    if user.save\n      redirect_to root_path\n    else\n      render 'new'\n    end\n  end\nend\n```\n\n### 例: 公開されている記事だけを表示したい\n\n```app/models/article.rb\nclass Article \u003c ApplicationRecord\nend\n```\n\n```app/models/published_article.rb\nclass PublishedArticle \u003c ApplicationRecord\n  self.table_name = \"articles\"\n  default_scope -\u003e { where(published: true) }\nend\n```\n\n```app/controllers/articles_controller.rb\nclass ArticlesController \u003c ApplicationController\n  def index\n    # 一覧用\n    @articles = PublishedArticle.order(published_at: :desc)\n\n    # 新規作成用\n    @new_article = Article.new\n  end\nend\n```\n\n### 例: 作るときだけ関連レコードのpresenceを確認したい\n\n```app/models/article.rb\nclass Article \u003c ApplicationRecord\n  belongs_to :author, optional: true\nend\n```\n\n```app/models/new_article.rb\nclass NewArticle \u003c Article\n  self.table_name = \"articles\"\n  validates :author, presence: true\nend\n```\n\n```app/controllers/articles_controller.rb\nclass ArticlesController \u003c ApplicationController\n  def create\n    @new_article = NewArticle.new(params)\n\n    if @new_article.save\n      redirect_to @new_article\n    else\n      render 'new'\n    end\n  end\nend\n```\n\n## まとめ\n\nアプリケーション全体で1つのテーブルに対応するActiveRecordのモデルが1つだとモデル全体に影響でる機能がアプリケーション全体に影響でてつらい。\n`default_scope`や`validation`や`callbacks`や`as_json`などモデル全体に影響が出るメソッドでつらみが生まれるのは、それらの機能自体が悪いわけではなく、アプリケーション全体で1モデルを共有しているのが原因ではないか?\nアプリケーションの様々な場面での責務を1つのActiveRecordのモデルに詰め込むとつらいので、責務に応じて同じテーブルを参照するActiveRecordのモデルを分けるとよいのでは、影響範囲が狭まるしActiveRecordの機能がそのまま使えて便利!というご提案でした。\n\n1つのテーブルに対応するActiveRecordのモデルを分けるのはマイグレーションやマイクロサービスなどで既にやっている人も多いと思いますが、アプリケーションコードでも分けてこ💪\n\n## 懸念\n\n最近の趣味のアプリケーションでちょっと試した感じよさそうでしたが大きいアプリケーションになるとまた別のつらみが発生しそう。[^tsurami]\n\n[^tsurami]: 複雑な実業務でやると影響範囲がアプリケーション全体から特定のモデルを使う機能に変わるだけで結局モデルクラスが増えた分メンテコスト増えたり、同じテーブルに対する操作が複数のモデルに散らばってしまいそう(concernでまとめてあげれば再利用できそうですが)、これはFormオブジェクトに分けても同じかな。\n","coediting":false,"comments_count":2,"created_at":"2018-02-12T01:11:49+09:00","group":null,"id":"ba1dd93905567d88145c","likes_count":61,"private":false,"reactions_count":0,"tags":[{"name":"Rails","versions":[]}],"title":"ActiveRecordのモデルが1つだとつらい","updated_at":"2018-08-28T06:32:56+09:00","url":"https://qiita.com/hanachin_/items/ba1dd93905567d88145c","user":{"description":"既婚バイ","facebook_id":"seiei.higa","followees_count":166,"followers_count":120,"github_login_name":"hanachin","id":"hanachin_","items_count":55,"linkedin_id":"","location":"Naha, Okinawa, Japan","name":"Seiei Miyagi","organization":"YassLab","permanent_id":2074,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/2074/profile-images/1511092027","twitter_screen_name":"hanachin_","website_url":""},"page_views_count":null}]