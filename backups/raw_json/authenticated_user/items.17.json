[{"rendered_body":"\u003cp\u003eRefinementsはレキシカルスコープという説明をよく聞くけど、どこにコードが書かれているかというよりは\u003ccode\u003eusing\u003c/code\u003eを呼んだ後の環境で評価されるかどうかというのが重要。なのでコードの字面でRefinementsで定義したメソッドの呼び出しが\u003ccode\u003eusing\u003c/code\u003eより前に書かれていても、先に\u003ccode\u003eusing\u003c/code\u003eの方が評価されていれば呼び出せる。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eRefinements are only active within a scope after the call to using.\u003cbr\u003e\n\u003ca href=\"https://docs.ruby-lang.org/en/2.5.0/syntax/refinements_rdoc.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\"\u003ehttps://docs.ruby-lang.org/en/2.5.0/syntax/refinements_rdoc.html\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"その1-beginの中でusing\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%9D%E3%81%AE1-begin%E3%81%AE%E4%B8%AD%E3%81%A7using\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eその1. \u003ccode\u003eBEGIN\u003c/code\u003eの中で\u003ccode\u003eusing\u003c/code\u003e\n\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eBEGIN\u003c/code\u003eで\u003ccode\u003eusing\u003c/code\u003eを使うとどのコードよりも先に\u003ccode\u003eusing\u003c/code\u003eが実行されるため先頭行で\u003ccode\u003eusing\u003c/code\u003eを書いたのと同じように働く。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"n\"\u003ehi\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# hi\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eBEGIN\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eusing\u003c/span\u003e \u003cspan class=\"no\"\u003eModule\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erefine\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eObject\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n      \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ehi\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"hi\"\u003c/span\u003e\n      \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"その10-bindingを使う\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%9D%E3%81%AE10-binding%E3%82%92%E4%BD%BF%E3%81%86\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eその10. \u003ccode\u003ebinding\u003c/code\u003eを使う\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eeval\u003c/code\u003eの第二引数に\u003ccode\u003eusing\u003c/code\u003eが効いた環境の\u003ccode\u003ebinding\u003c/code\u003eを渡すと\u003ccode\u003eusing\u003c/code\u003eで定義したメソッドが使える。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003eeval\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'hi'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eusing\u003c/span\u003e \u003cspan class=\"no\"\u003eModule\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erefine\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eObject\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ehi\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"hi\"\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ebinding\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e\u003ccode\u003eBinding#eval\u003c/code\u003eしてもよし。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeval\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e'hi'\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eusing\u003c/span\u003e \u003cspan class=\"no\"\u003eModule\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003erefine\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"no\"\u003eObject\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n    \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ehi\u003c/span\u003e\n      \u003cspan class=\"nb\"\u003eputs\u003c/span\u003e \u003cspan class=\"s2\"\u003e\"hi\"\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ebinding\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"10ないじゃん\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#10%E3%81%AA%E3%81%84%E3%81%98%E3%82%83%E3%82%93\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e10ないじゃん\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"s2\"\u003e\"10\"\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eto_i\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; 2\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n","body":"Refinementsはレキシカルスコープという説明をよく聞くけど、どこにコードが書かれているかというよりは`using`を呼んだ後の環境で評価されるかどうかというのが重要。なのでコードの字面でRefinementsで定義したメソッドの呼び出しが`using`より前に書かれていても、先に`using`の方が評価されていれば呼び出せる。\n\n\u003e Refinements are only active within a scope after the call to using.\nhttps://docs.ruby-lang.org/en/2.5.0/syntax/refinements_rdoc.html\n\n## その1. `BEGIN`の中で`using`\n\n`BEGIN`で`using`を使うとどのコードよりも先に`using`が実行されるため先頭行で`using`を書いたのと同じように働く。\n\n```rb\nhi\n# hi\n\nBEGIN {\n  using Module.new {\n    refine(Object) do\n      def hi\n        puts \"hi\"\n      end\n    end\n  }\n}\n```\n\n## その10. `binding`を使う\n\n`eval`の第二引数に`using`が効いた環境の`binding`を渡すと`using`で定義したメソッドが使える。\n\n```rb\ndef greeting(b)\n  eval('hi', b)\nend\n\nusing Module.new {\n  refine(Object) do\n    def hi\n      puts \"hi\"\n    end\n  end\n}\n\ngreeting(binding)\n```\n\n`Binding#eval`してもよし。\n\n```rb\ndef greeting(b)\n  b.eval('hi')\nend\n\nusing Module.new {\n  refine(Object) do\n    def hi\n      puts \"hi\"\n    end\n  end\n}\n\ngreeting(binding)\n```\n\n## 10ないじゃん\n\n```rb\n\"10\".to_i(2)\n# =\u003e 2\n```\n","coediting":false,"comments_count":0,"created_at":"2018-05-31T16:18:14+09:00","group":null,"id":"d01576d276be3de7cfab","likes_count":7,"private":false,"reactions_count":0,"tags":[{"name":"Ruby","versions":[]}],"title":"Refinementsで定義したメソッドをusingより前の行で呼び出すテクニック10選","updated_at":"2018-06-01T00:24:29+09:00","url":"https://qiita.com/hanachin_/items/d01576d276be3de7cfab","user":{"description":"既婚バイ","facebook_id":"seiei.higa","followees_count":166,"followers_count":120,"github_login_name":"hanachin","id":"hanachin_","items_count":55,"linkedin_id":"","location":"Naha, Okinawa, Japan","name":"Seiei Miyagi","organization":"YassLab","permanent_id":2074,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/2074/profile-images/1511092027","twitter_screen_name":"hanachin_","website_url":""},"page_views_count":null}]