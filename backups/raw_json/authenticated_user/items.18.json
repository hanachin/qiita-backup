[{"rendered_body":"\n\u003ch2\u003e\n\u003cspan id=\"特定の値を代入できないグローバル変数に代入\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%89%B9%E5%AE%9A%E3%81%AE%E5%80%A4%E3%82%92%E4%BB%A3%E5%85%A5%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84%E3%82%B0%E3%83%AD%E3%83%BC%E3%83%90%E3%83%AB%E5%A4%89%E6%95%B0%E3%81%AB%E4%BB%A3%E5%85%A5\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e特定の値を代入できないグローバル変数に代入\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003e$~\u003c/code\u003eに\u003ccode\u003enil\u003c/code\u003eや\u003ccode\u003eMatchData\u003c/code\u003eのインスタンス以外を代入すると例外が発生します。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"console\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ruby \u003cspan class=\"nt\"\u003e-e\u003c/span\u003e \u003cspan class=\"s1\"\u003e'$~=1'\u003c/span\u003e\n\u003cspan class=\"go\"\u003eTraceback (most recent call last):\n\u003c/span\u003e\u003cspan class=\"gp\"\u003e-e:1:in `\u0026lt;main\u0026gt;\u003c/span\u003e\u003cspan class=\"s1\"\u003e': wrong argument type Integer (expected MatchData) (TypeError)\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"おこられるリテラルを書く\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%8A%E3%81%93%E3%82%89%E3%82%8C%E3%82%8B%E3%83%AA%E3%83%86%E3%83%A9%E3%83%AB%E3%82%92%E6%9B%B8%E3%81%8F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eおこられるリテラルを書く\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"console\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ruby \u003cspan class=\"nt\"\u003e-e\u003c/span\u003e \u003cspan class=\"s1\"\u003e'def Range.new(*); end; nil..false'\u003c/span\u003e\n\u003cspan class=\"go\"\u003eTraceback (most recent call last):\n\u003c/span\u003e\u003cspan class=\"gp\"\u003e-e:1:in `\u0026lt;main\u0026gt;\u003c/span\u003e\u003cspan class=\"s1\"\u003e': bad value for range (ArgumentError)\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e例えば\u003ccode\u003eRange.new(nil, false)\u003c/code\u003eを実行すると同じように例外が発生しますが、\u003ccode\u003enew\u003c/code\u003eを上書きされてしまうと例外が発生しません。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nc\"\u003eRange\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"no\"\u003eRange\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kp\"\u003enil\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kp\"\u003efalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; nil\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eリテラルで書くと\u003ccode\u003eRange.new\u003c/code\u003eを再定義していてもCの\u003ccode\u003eRange.new\u003c/code\u003e相当のC関数が直接呼ばれるため必ず例外を発生できます。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"無限に再帰\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%84%A1%E9%99%90%E3%81%AB%E5%86%8D%E5%B8%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e無限に再帰\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eraise\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003eraise\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eraise\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"console\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ruby \u003cspan class=\"nt\"\u003e-e\u003c/span\u003e \u003cspan class=\"s1\"\u003e'def raise(_=raise); end; raise'\u003c/span\u003e\n\u003cspan class=\"go\"\u003eTraceback (most recent call last):\n\u003c/span\u003e\u003cspan class=\"gp\"\u003e        11913: from -e:1:in `\u0026lt;main\u0026gt;\u003c/span\u003e\u003cspan class=\"s1\"\u003e'\n\u003c/span\u003e\u003cspan class=\"go\"\u003e        11912: from -e:1:in `raise'\n        11911: from -e:1:in `raise'\n        11910: from -e:1:in `raise'\n        11909: from -e:1:in `raise'\n        11908: from -e:1:in `raise'\n        11907: from -e:1:in `raise'\n        11906: from -e:1:in `raise'\n         ... 11901 levels...\n            4: from -e:1:in `raise'\n            3: from -e:1:in `raise'\n            2: from -e:1:in `raise'\n            1: from -e:1:in `raise'\n-e:1:in `raise': stack level too deep (SystemStackError)\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003eこう定義するとTracePointのcallイベントが発生するため再帰呼出しをする前に\u003ccode\u003ereturn\u003c/code\u003eされてしまう可能性があります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eraise\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eraise\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"no\"\u003eTracePoint\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etrace\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:call\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003etp\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003etp\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebinding\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeval\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\"return nil\"\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003eraise\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cp\u003e引数で再帰すると大丈夫です。\u003c/p\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"メソッドの外でsuper\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%81%AE%E5%A4%96%E3%81%A7super\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eメソッドの外でsuper\u003c/h2\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"console\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ruby \u003cspan class=\"nt\"\u003e-e\u003c/span\u003e \u003cspan class=\"s1\"\u003e'super'\u003c/span\u003e\n\u003cspan class=\"go\"\u003eTraceback (most recent call last):\n\u003c/span\u003e\u003cspan class=\"gp\"\u003e-e:1:in `\u0026lt;main\u0026gt;\u003c/span\u003e\u003cspan class=\"s1\"\u003e': super called outside of method (NoMethodError)\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"x-raise\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#x-raise\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cimg alt=\":x:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/274c.png\" title=\":x:\" width=\"20\"\u003e raise\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003eraise\u003c/code\u003eはメソッドなので上書きされる可能性があります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:raise\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; #\u0026lt;Method: main.raise\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003eraise\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eraise\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# =\u0026gt; nil\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"x-catchせずにthrow\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#x-catch%E3%81%9B%E3%81%9A%E3%81%ABthrow\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cimg alt=\":x:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/274c.png\" title=\":x:\" width=\"20\"\u003e catchせずにthrow\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003ethrow\u003c/code\u003eはメソッドなので上書きされる可能性があります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"nb\"\u003emethod\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e:throw\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"c1\"\u003e#\u0026lt;Method: main.throw\u0026gt;\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003ethrow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"kp\"\u003ethrow\u003c/span\u003e \u003cspan class=\"ss\"\u003e:hi\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"x-存在しないローカル変数やメソッドを呼び出す\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#x-%E5%AD%98%E5%9C%A8%E3%81%97%E3%81%AA%E3%81%84%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E5%A4%89%E6%95%B0%E3%82%84%E3%83%A1%E3%82%BD%E3%83%83%E3%83%89%E3%82%92%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%99\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cimg alt=\":x:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/274c.png\" title=\":x:\" width=\"20\"\u003e 存在しないローカル変数やメソッドを呼び出す\u003c/h2\u003e\n\n\u003cp\u003e\u003ccode\u003emethod_missing\u003c/code\u003eで回避されてしまう可能性があります。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"rb\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eObject\u003c/span\u003e\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003emethod_missing\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003edef\u003c/span\u003e \u003cspan class=\"nf\"\u003erespond_to_missing\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"kp\"\u003etrue\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"x-未定義のクラス変数を参照\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#x-%E6%9C%AA%E5%AE%9A%E7%BE%A9%E3%81%AE%E3%82%AF%E3%83%A9%E3%82%B9%E5%A4%89%E6%95%B0%E3%82%92%E5%8F%82%E7%85%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cimg alt=\":x:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/274c.png\" title=\":x:\" width=\"20\"\u003e 未定義のクラス変数を参照\u003c/h2\u003e\n\n\u003cp\u003e未定義かどうか調べる方法がなさそう\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"console\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ruby \u003cspan class=\"nt\"\u003e-e\u003c/span\u003e \u003cspan class=\"s1\"\u003e'@@foo'\u003c/span\u003e\n\u003cspan class=\"go\"\u003e-e:1: warning: class variable access from toplevel\nTraceback (most recent call last):\n\u003c/span\u003e\u003cspan class=\"gp\"\u003e-e:1:in `\u0026lt;main\u0026gt;\u003c/span\u003e\u003cspan class=\"s1\"\u003e': uninitialized class variable @@foo in Object (NameError)\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\n\u003ch2\u003e\n\u003cspan id=\"x-未定義の定数を参照\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#x-%E6%9C%AA%E5%AE%9A%E7%BE%A9%E3%81%AE%E5%AE%9A%E6%95%B0%E3%82%92%E5%8F%82%E7%85%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003cimg alt=\":x:\" class=\"emoji\" height=\"20\" src=\"https://cdn.qiita.com/emoji/twemoji/unicode/274c.png\" title=\":x:\" width=\"20\"\u003e 未定義の定数を参照\u003c/h2\u003e\n\n\u003cp\u003e未定義かどうか調べる方法がなさそう\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"console\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003cspan class=\"gp\"\u003e$\u003c/span\u003e ruby \u003cspan class=\"nt\"\u003e-e\u003c/span\u003e \u003cspan class=\"s1\"\u003e'Foo'\u003c/span\u003e\n\u003cspan class=\"go\"\u003eTraceback (most recent call last):\n\u003c/span\u003e\u003cspan class=\"gp\"\u003e-e:1:in `\u0026lt;main\u0026gt;\u003c/span\u003e\u003cspan class=\"s1\"\u003e': uninitialized constant Foo (NameError)\n\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n","body":"## 特定の値を代入できないグローバル変数に代入\n\n`$~`に`nil`や`MatchData`のインスタンス以外を代入すると例外が発生します。\n\n```console\n$ ruby -e '$~=1'\nTraceback (most recent call last):\n-e:1:in `\u003cmain\u003e': wrong argument type Integer (expected MatchData) (TypeError)\n```\n\n## おこられるリテラルを書く\n\n```console\n$ ruby -e 'def Range.new(*); end; nil..false'\nTraceback (most recent call last):\n-e:1:in `\u003cmain\u003e': bad value for range (ArgumentError)\n```\n\n例えば`Range.new(nil, false)`を実行すると同じように例外が発生しますが、`new`を上書きされてしまうと例外が発生しません。\n\n```rb\ndef Range.new(*); end\nRange.new(nil, false)\n# =\u003e nil\n```\n\nリテラルで書くと`Range.new`を再定義していてもCの`Range.new`相当のC関数が直接呼ばれるため必ず例外を発生できます。\n\n## 無限に再帰\n\n```rb\ndef raise(_=raise)\nend\nraise\n```\n\n```console\n$ ruby -e 'def raise(_=raise); end; raise'\nTraceback (most recent call last):\n        11913: from -e:1:in `\u003cmain\u003e'\n        11912: from -e:1:in `raise'\n        11911: from -e:1:in `raise'\n        11910: from -e:1:in `raise'\n        11909: from -e:1:in `raise'\n        11908: from -e:1:in `raise'\n        11907: from -e:1:in `raise'\n        11906: from -e:1:in `raise'\n         ... 11901 levels...\n            4: from -e:1:in `raise'\n            3: from -e:1:in `raise'\n            2: from -e:1:in `raise'\n            1: from -e:1:in `raise'\n-e:1:in `raise': stack level too deep (SystemStackError)\n```\n\nこう定義するとTracePointのcallイベントが発生するため再帰呼出しをする前に`return`されてしまう可能性があります。\n\n```rb\ndef raise\n  raise\nend\nTracePoint.trace(:call) {|tp| tp.binding.eval(\"return nil\") }\nraise\n```\n\n引数で再帰すると大丈夫です。\n\n## メソッドの外でsuper\n\n```console\n$ ruby -e 'super'\nTraceback (most recent call last):\n-e:1:in `\u003cmain\u003e': super called outside of method (NoMethodError)\n```\n\n## :x: raise\n\n`raise`はメソッドなので上書きされる可能性があります。\n\n```rb\nmethod(:raise)\n# =\u003e #\u003cMethod: main.raise\u003e\n```\n\n```rb\ndef raise; end\nraise\n# =\u003e nil\n```\n\n## :x: catchせずにthrow\n\n`throw`はメソッドなので上書きされる可能性があります。\n\n```rb\nmethod(:throw)\n=\u003e #\u003cMethod: main.throw\u003e\n```\n\n```rb\ndef throw(*); end\nthrow :hi\n```\n\n## :x: 存在しないローカル変数やメソッドを呼び出す\n\n`method_missing`で回避されてしまう可能性があります。\n\n```rb\nclass Object\n  def method_missing(*)\n    true\n  end\n\n  def respond_to_missing(*)\n    true\n  end\nend\n\nfoo\n```\n\n## :x: 未定義のクラス変数を参照\n\n未定義かどうか調べる方法がなさそう\n\n```console\n$ ruby -e '@@foo'\n-e:1: warning: class variable access from toplevel\nTraceback (most recent call last):\n-e:1:in `\u003cmain\u003e': uninitialized class variable @@foo in Object (NameError)\n```\n\n## :x: 未定義の定数を参照\n\n未定義かどうか調べる方法がなさそう\n\n```console\n$ ruby -e 'Foo'\nTraceback (most recent call last):\n-e:1:in `\u003cmain\u003e': uninitialized constant Foo (NameError)\n```\n","coediting":false,"comments_count":0,"created_at":"2018-05-31T11:43:22+09:00","group":null,"id":"873a388a4983136b2fe4","likes_count":5,"private":false,"reactions_count":0,"tags":[{"name":"Ruby","versions":[]}],"title":"Rubyで例外を発生させる","updated_at":"2018-05-31T11:43:22+09:00","url":"https://qiita.com/hanachin_/items/873a388a4983136b2fe4","user":{"description":"既婚バイ","facebook_id":"seiei.higa","followees_count":166,"followers_count":120,"github_login_name":"hanachin","id":"hanachin_","items_count":55,"linkedin_id":"","location":"Naha, Okinawa, Japan","name":"Seiei Miyagi","organization":"YassLab","permanent_id":2074,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/2074/profile-images/1511092027","twitter_screen_name":"hanachin_","website_url":""},"page_views_count":null}]